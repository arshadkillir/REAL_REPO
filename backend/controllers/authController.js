const { User } = require('../models'); const pwd = require('../utils/password'); const jwt = require('../utils/jwt'); const jwtLib = require('jsonwebtoken'); async function register(req,res){ const { email, password, name, tenantId, role } = req.body; if(!email||!password) return res.status(400).json({ error:'email+password required' }); const hash = await pwd.hash(password); const u = await User.create({ email, passwordHash:hash, name, role: role||'staff', tenantId }); res.json({ id: u.id, email: u.email }); } async function login(req,res){ const { email, password } = req.body; const u = await User.findOne({ where:{ email } }); if(!u) return res.status(401).json({ error:'invalid creds' }); const ok = await pwd.compare(password, u.passwordHash); if(!ok) return res.status(401).json({ error:'invalid creds' }); const token = jwt.sign({ id:u.id, email:u.email, role:u.role, tenantId: u.tenantId }); const refresh = jwtLib.sign({ id:u.id }, process.env.JWT_REFRESH_SECRET || 'refresh_secret', { expiresIn: '30d' }); res.json({ token, refresh }); } module.exports = { register, login };
