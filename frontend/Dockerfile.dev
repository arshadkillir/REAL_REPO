# Build stage
FROM node:18-bullseye AS build
WORKDIR /app

# avoid optional native bindings issues and ensure dev deps for build
ENV NPM_CONFIG_OPTIONAL=false
ENV NPM_CONFIG_PRODUCTION=false

COPY package*.json ./
RUN npm ci --silent && npm i --no-save @rollup/rollup-linux-x64-gnu --silent || true

COPY . .
RUN npm run build --silent

# Runtime stage
FROM nginx:alpine AS runtime
RUN rm -rf /usr/share/nginx/html/*
COPY --from=build /app/dist /usr/share/nginx/html
# ensure a BOM-free nginx config file is present at frontend/nginx-proxy.conf
COPY nginx-proxy.conf /etc/nginx/conf.d/default.conf
EXPOSE 80
CMD ["/bin/sh","-c","nginx -g 'daemon off;'"]

